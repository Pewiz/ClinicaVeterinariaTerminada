# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ventAsignarHorario.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
import csv
from SalasHorario import SalasHorario
from ManejoArchivo import GestionArchivo
from datetime import datetime

class Ui_VentAsignarHorario(object):
    def __init__(self,usuario):
        self._usuario = usuario
        
    def setupUi(self, VentAsignarHorario):
        VentAsignarHorario.setObjectName("VentAsignarHorario")
        VentAsignarHorario.resize(950, 680)
        VentAsignarHorario.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.bannerSup = QtWidgets.QLabel(VentAsignarHorario)
        self.bannerSup.setGeometry(QtCore.QRect(0, 0, 950, 130))
        self.bannerSup.setStyleSheet("background-color: transparent;")
        self.bannerSup.setText("")
        self.bannerSup.setPixmap(QtGui.QPixmap("imagenes/bannerClinica.png"))
        self.bannerSup.setObjectName("bannerSup")
        self.rutLnE = QtWidgets.QLineEdit(VentAsignarHorario)
        self.rutLnE.setEnabled(False)
        self.rutLnE.setGeometry(QtCore.QRect(40, 170, 161, 31))
        self.rutLnE.setStyleSheet("background-color: rgb(207, 207, 207);\n"
"font: 75 12pt \"MS Shell Dlg 2\";")
        self.rutLnE.setObjectName("rutLnE")        
        self.nombreLnE = QtWidgets.QLineEdit(VentAsignarHorario)
        self.nombreLnE.setGeometry(QtCore.QRect(230, 170, 271, 31))
        self.nombreLnE.setStyleSheet("background-color: rgb(207, 207, 207);\n"
"font: 75 12pt \"MS Shell Dlg 2\";")
        self.nombreLnE.setObjectName("nombreLnE")
        self.nombreLnE.setEnabled(False)
        self.fechaABuscar = QtWidgets.QDateEdit(VentAsignarHorario)
        self.fechaABuscar.setGeometry(QtCore.QRect(550, 170, 171, 31))
        fecha = datetime.now()
        dia = fecha.day
        mes = fecha.month
        anho = fecha.year

        self.fechaABuscar.setDateTime(QtCore.QDateTime(QtCore.QDate(anho, mes, dia), QtCore.QTime(0, 0, 0)))
        self.fechaABuscar.setMinimumDate(QtCore.QDate(anho, mes, dia))
        self.fechaABuscar.setObjectName("fechaABuscar")
        self.tablaHorarioVet = QtWidgets.QTableWidget(VentAsignarHorario)
        self.tablaHorarioVet.setGeometry(QtCore.QRect(190, 230, 431, 411))
        self.tablaHorarioVet.horizontalHeader().setStretchLastSection(True)
        self.tablaHorarioVet.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tablaHorarioVet.setObjectName("tablaHorarioVet")
        self.tablaHorarioVet.setColumnCount(3)
        self.tablaHorarioVet.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tablaHorarioVet.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tablaHorarioVet.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tablaHorarioVet.setHorizontalHeaderItem(2, item)
        self.tablaHorarioVet.setHorizontalHeaderItem(2,item)
        
        self.btnRegresar = QtWidgets.QPushButton(VentAsignarHorario)
        self.btnRegresar.setGeometry(QtCore.QRect(10, 50, 41, 31))
        self.btnRegresar.setStyleSheet("background-color: transparent;")
        self.btnRegresar.setText("")
        self.btnRegresar.setObjectName("btnRegresar")
        self.btnRegresar.clicked.connect(VentAsignarHorario.close)
        self.btnSeleccHora = QtWidgets.QPushButton(VentAsignarHorario)
        self.btnSeleccHora.setGeometry(QtCore.QRect(700, 310, 121, 51))
        self.btnSeleccHora.setStyleSheet("background-color: rgb(79, 163, 166);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-color: rgb(0, 51, 102);\n"
"border-radius: 5px;")
        self.btnSeleccHora.setObjectName("btnSeleccHora")
        self.btnSeleccHora.clicked.connect(self.seleccionarHora)

        self.btnBuscarHora = QtWidgets.QPushButton(VentAsignarHorario)
        self.btnBuscarHora.setGeometry(QtCore.QRect(700, 230, 121, 51))
        self.btnBuscarHora.setStyleSheet("background-color: rgb(79, 163, 166);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-color: rgb(0, 51, 102);\n"
"border-radius: 5px;")
        self.btnBuscarHora.setObjectName("btnBuscarHora")
        self.btnBuscarHora.clicked.connect(self.cargarHorarios)
        

        self.retranslateUi(VentAsignarHorario)
        QtCore.QMetaObject.connectSlotsByName(VentAsignarHorario)


    def retranslateUi(self, VentAsignarHorario):
        _translate = QtCore.QCoreApplication.translate
        nombre = self._usuario.nombres + " "+ self._usuario.apellidoPa+""
        VentAsignarHorario.setWindowTitle(_translate("VentAsignarHorario", "Dialog"))
        self.rutLnE.setText(_translate("VentAsignarHorario", self._usuario.rut))
        self.nombreLnE.setText(_translate("VentAsignarHorario", nombre))
        item = self.tablaHorarioVet.horizontalHeaderItem(0)
        item.setText(_translate("VentAsignarHorario", "Sala"))
        item = self.tablaHorarioVet.horizontalHeaderItem(1)
        item.setText(_translate("VentAsignarHorario", "Horario"))
        item = self.tablaHorarioVet.horizontalHeaderItem(2)
        item.setText(_translate("VentAsignarHorario", "Fecha"))
        self.btnSeleccHora.setText(_translate("VentAsignarHorario", "Seleccionar Hora"))
        self.btnBuscarHora.setText(_translate("VentAsignarHorario", "Buscar"))


        

    def cargarHorarios(self):
        self.tablaHorarioVet.clearContents()
        self.tablaHorarioVet.setRowCount(0)
        encabezados =  ["Sala","Horario","Fecha"]
        self.tablaHorarioVet.setHorizontalHeaderLabels(encabezados)

        salasEncontradas = self.horarioSalas()

        for sala in salasEncontradas:
            posicionFila = self.tablaHorarioVet.rowCount()
            self.tablaHorarioVet.insertRow(posicionFila)
            for columna in range(5):
                if columna == 2:
                    value = sala.numSala
                    item = QtWidgets.QTableWidgetItem(value)
                    self.tablaHorarioVet.setItem(posicionFila, columna-2, item)
                elif columna == 3:
                    value = sala.horario
                    item = QtWidgets.QTableWidgetItem(value)
                    self.tablaHorarioVet.setItem(posicionFila, columna-2, item)
                elif columna == 4:
                    value = sala.fecha
                    item = QtWidgets.QTableWidgetItem(value)
                    self.tablaHorarioVet.setItem(posicionFila, columna-2, item)

        self.tablaHorarioVet.resizeColumnsToContents()          

                        
    def seleccionarHora(self):
        fila = self.tablaHorarioVet.currentRow()
        if fila != -1:
            rut = self.rutLnE.text()
            numSala = self.tablaHorarioVet.item(fila, 0).text()
            horario = self.tablaHorarioVet.item(fila, 1).text()        
            fecha = self.tablaHorarioVet.item(fila, 2).text()
            horaVet = SalasHorario(id=rut,rut=None,sala=numSala,horario=horario,fecha=fecha)
            
        GestionArchivo.insertar("salas.csv",horaVet)
        self.alertBox("Horario Guardado correctamente","Horario Veterinario")

    def horariosVet(self,objeto):
        salasOcupadas = GestionArchivo.seleccionarTodo("salas.csv")

        for sala in salasOcupadas:
            salaOcupada = SalasHorario(sala[0],sala[1],sala[2],sala[3],sala[4])

            if objeto.fecha == salaOcupada.fecha:
                if objeto.horario == salaOcupada.horario:
                    if objeto.numSala == salaOcupada.numSala:
                        return False
                
        return True
                    


    def horarioSalas(self):
        salas = GestionArchivo.seleccionarTodo("horarioSalas.csv")
        fechaE = self.fechaABuscar.date().toString("dd/MM/yyyy")
        salasDisp = []
        for sala in salas:
            objetoSala = SalasHorario(sala[0],sala[1],sala[2],sala[3],fechaE)
            verificador = self.horariosVet(objetoSala)
            if verificador:
                salasDisp.append(objetoSala)

        return salasDisp

    def alertBox(self, Mensaje, Titulo):
        alert = QMessageBox()
        alert.setText(Mensaje)
        alert.setWindowTitle(Titulo)
        alert.exec_()

                    

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    mainWindow = QtWidgets.QMainWindow()
    ui = Ui_VentAsignarHorario()
    ui.setupUi(mainWindow)
    mainWindow.show()
    sys.exit(app.exec_())
