# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'VentVerUsuario.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import csv
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox, QDialog,QMainWindow
from VentEditarUsuario import Ui_VentVerDatosUser
from VentVerHorarioVet import Ui_VentVerHorario
from Usuario import Usuario

class Ui_VentVerUsuario(object):
    def setupUi(self, VentVerUsuario):
        VentVerUsuario.setObjectName("VentVerUsuario")
        VentVerUsuario.resize(950, 680)
        VentVerUsuario.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label = QtWidgets.QLabel(VentVerUsuario)
        self.label.setGeometry(QtCore.QRect(0, 0, 950, 130))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("imagenes/bannerClinica.png"))
        self.label.setObjectName("label")
        self.btnRegresar = QtWidgets.QPushButton(VentVerUsuario)
        self.btnRegresar.setGeometry(QtCore.QRect(10, 50, 41, 31))
        self.btnRegresar.setStyleSheet("background-color: transparent;")
        self.btnRegresar.setText("")
        self.btnRegresar.setObjectName("btnRegresar")
        self.btnRegresar.clicked.connect(VentVerUsuario.close)
        self.tableWidget = QtWidgets.QTableWidget(VentVerUsuario)
        self.tableWidget.setGeometry(QtCore.QRect(20, 160, 741, 341))
        self.tableWidget.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(9)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(8, item)
        self.btnVerUsuario = QtWidgets.QPushButton(VentVerUsuario)
        self.btnVerUsuario.setGeometry(QtCore.QRect(780, 260, 141, 41))
        self.btnVerUsuario.setStyleSheet("background-color: rgb(79, 163, 166);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-color: rgb(0, 51, 102);\n"
"border-radius: 5px;")
        self.btnVerUsuario.setObjectName("btnVerUsuario")
        self.btnVerUsuario.clicked.connect(self.onActionBtnVerUsuario)
        self.btnVerUsuario.clicked.connect(VentVerUsuario.close)
        self.buscadorRut = QtWidgets.QLineEdit(VentVerUsuario)
        self.buscadorRut.setGeometry(QtCore.QRect(780, 180, 141, 31))
        self.buscadorRut.setObjectName("buscadorRut")
        self.onlyInt = QtGui.QIntValidator()
        self.buscadorRut.setValidator(self.onlyInt)
        self.buscadorRut.textChanged.connect(self.buscador)
        self.btnEliminarUsuario = QtWidgets.QPushButton(VentVerUsuario)
        self.btnEliminarUsuario.setGeometry(QtCore.QRect(780, 350, 141, 41))
        self.btnEliminarUsuario.setStyleSheet("background-color: rgb(79, 163, 166);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-color: rgb(0, 51, 102);\n"
"border-radius: 5px;")
        self.btnEliminarUsuario.setObjectName("btnEliminarUsuario")
        self.btnEliminarUsuario.clicked.connect(self.onActionBtnEliminar)
        self.btnVerHorario = QtWidgets.QPushButton(VentVerUsuario)
        self.btnVerHorario.setGeometry(QtCore.QRect(780, 440, 141, 41))
        self.btnVerHorario.setStyleSheet("background-color: rgb(79, 163, 166);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-color: rgb(0, 51, 102);\n"
"border-radius: 5px;")
        self.btnVerHorario.setObjectName("btnVerHorario")
        self.btnVerHorario.clicked.connect(self.onActionBtnVerHorario)

        self.retranslateUi(VentVerUsuario)
        QtCore.QMetaObject.connectSlotsByName(VentVerUsuario)

        self.cargarUsuarioCSV()

    def retranslateUi(self, VentVerUsuario):
        _translate = QtCore.QCoreApplication.translate
        VentVerUsuario.setWindowTitle(_translate("VentVerUsuario", "Dialog"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("VentVerUsuario", "Rut"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("VentVerUsuario", "Nombres"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("VentVerUsuario", "Apellido Paterno"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("VentVerUsuario", "Apellido Materno"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("VentVerUsuario", "Cargo"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("VentVerUsuario", "Email"))
        item = self.tableWidget.horizontalHeaderItem(6)
        item.setText(_translate("VentVerUsuario", "Experiencia"))
        item = self.tableWidget.horizontalHeaderItem(7)
        item.setText(_translate("VentVerUsuario", "Genero"))
        item = self.tableWidget.horizontalHeaderItem(8)
        item.setText(_translate("VentVerUsuario", "Email"))
        self.btnVerUsuario.setText(_translate("VentVerUsuario", "Ver Usuario"))
        self.buscadorRut.setPlaceholderText(_translate("VentVerUsuario", "Rut a buscar"))
        self.btnEliminarUsuario.setText(_translate("VentVerUsuario", "Eliminar Usuario"))
        self.btnVerHorario.setText(_translate("VentVerUsuario", "Ver Horario"))

    def onActionBtnEliminar(self):
        fila = self.tableWidget.currentRow()
        columna = self.tableWidget.currentColumn()
        if columna == 0: 
            if fila != -1:
                self.tableWidget.removeRow(fila)
                self.btnEliminarUsuario.clicked.connect(self.actualizar)
        else:
            self.alertBox("Debe seleccionar un 'Rut' para borrar el cliente", "Instrucciones para borrar")

    def onActionBtnVerUsuario(self):
        fila = self.tableWidget.currentRow()
        if fila != -1:
            usuario = Usuario(self.tableWidget.item(fila, 0).text(),
                              self.tableWidget.item(fila, 1).text(),
                              self.tableWidget.item(fila, 2).text(),
                              self.tableWidget.item(fila, 3).text(),
                              self.tableWidget.item(fila, 4).text(),
                              self.tableWidget.item(fila, 5).text(),
                              self.tableWidget.item(fila, 6).text(),
                              self.tableWidget.item(fila, 7).text(),
                              self.tableWidget.item(fila, 8).text(),)
            self.cambiarVent(Ui_VentVerDatosUser,usuario,fila+1,Ui_VentVerUsuario)

    def onActionBtnVerHorario(self):
        fila = self.tableWidget.currentRow()
        if fila != -1:
            usuario = Usuario(self.tableWidget.item(fila, 0).text(),
                              self.tableWidget.item(fila, 1).text(),
                              self.tableWidget.item(fila, 2).text(),
                              self.tableWidget.item(fila, 3).text(),
                              self.tableWidget.item(fila, 4).text(),
                              self.tableWidget.item(fila, 5).text(),
                              self.tableWidget.item(fila, 6).text(),
                              self.tableWidget.item(fila, 7).text(),
                              self.tableWidget.item(fila, 8).text(),)
            self.cambiarVent(Ui_VentVerHorario,usuario,fila+1,Ui_VentVerUsuario)
            
        
            
        
        

    def actualizar(self):
        # Abre el archivo CSV
        with open('veterinarios.csv', 'w', newline='') as csvfile:
            writer = csv.writer(csvfile, delimiter=',', quotechar='"', quoting=csv.QUOTE_MINIMAL)
            
            encabezados = [self.tableWidget.horizontalHeaderItem(i).text() for i in range(self.tableWidget.columnCount())]
            writer.writerow(encabezados)
            for fila in range(self.tableWidget.rowCount()):
                datos_de_la_fila = []
                for columna in range(self.tableWidget.columnCount()):
                    celda = self.tableWidget.item(fila, columna)
                    if celda is not None:
                        datos_de_la_fila.append(celda.text())
                    else:
                        datos_de_la_fila.append('')
                writer.writerow(datos_de_la_fila)
        self.alertBox("Se han actualizado los cambios exitosamente!", "Se han completado los cambios")

    def cargarUsuarioCSV(self):
        # Abre el archivo CSV
        with open('veterinarios.csv', newline='') as csvfile:
            reader = csv.reader(csvfile, delimiter=',', quotechar='"')
            #  Lee la primera fila como los encabezados de las columnas y los posiciona en el tableWidget
            encabezados = next(reader)
            self.tableWidget.setHorizontalHeaderLabels(encabezados)
            # Recorre las filas para obtener los datos que se muestran en el tableWidget
            for fila in reader:
                posicionFila = self.tableWidget.rowCount()
                self.tableWidget.insertRow(posicionFila)
                for columna, value in enumerate(fila):
                    item = QtWidgets.QTableWidgetItem(value)
                    self.tableWidget.setItem(posicionFila, columna, item)
                    
        # Ajusta el tamaño de las celdas automaticamente
        self.tableWidget.resizeColumnsToContents()
        self.tableWidget.resizeRowsToContents()

    def alertBox(self, Mensaje, Titulo):
        alert = QMessageBox()
        alert.setText(Mensaje)
        alert.setWindowTitle(Titulo)
        alert.exec_()

    def buscador(self, texto):
        for row in range(self.tableWidget.rowCount()):
            rut = self.tableWidget.item(row, 0).text()
            if texto in rut:
                self.tableWidget.setRowHidden(row, False)
            else:
                self.tableWidget.setRowHidden(row, True)


    def cambiarVent(self, nombre_Vent,usuario,fila,ventanaOrigen):
        self.nombre_Vent = QtWidgets.QMainWindow()
        self.ui = nombre_Vent(usuario,fila,ventanaOrigen)
        self.ui.setupUi(self.nombre_Vent)
        self.nombre_Vent.show()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    mainWindow = QtWidgets.QMainWindow()
    ui = Ui_VentVerUsuario()
    ui.setupUi(mainWindow)
    mainWindow.show()
    sys.exit(app.exec_())

