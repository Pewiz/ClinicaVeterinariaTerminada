# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'verUrgencias.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import os 
import csv

class Ui_horasUrgencias(object):
    def setupUi(self, horasUrgencias):
        horasUrgencias.setObjectName("horasUrgencias")
        horasUrgencias.resize(574, 455)
        self.centralwidget = QtWidgets.QWidget(horasUrgencias)
        self.centralwidget.setObjectName("centralwidget")
        self.listView = QtWidgets.QListView(self.centralwidget)
        self.listView.setGeometry(QtCore.QRect(160, 20, 381, 361))
        self.listView.setObjectName("listView")
        self.botonAtras = QtWidgets.QPushButton(self.centralwidget)
        self.botonAtras.setGeometry(QtCore.QRect(30, 370, 75, 23))
        self.botonAtras.setObjectName("botonAtras")
        self.botonAtras.clicked.connect(horasUrgencias.close)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(20, 20, 141, 171))
        self.label.setObjectName("label")
        self.botonBuscar = QtWidgets.QPushButton(self.centralwidget)
        self.botonBuscar.setGeometry(QtCore.QRect(40, 240, 75, 23))
        self.botonBuscar.setObjectName("botonBuscar")
        self.botonBuscar.clicked.connect(self.buscar_datos)
        self.lineNombre = QtWidgets.QLineEdit(self.centralwidget)
        self.lineNombre.setGeometry(QtCore.QRect(20, 190, 113, 20))
        self.lineNombre.setObjectName("lineNombre")
        self.lineNombre.raise_()
        self.botonBuscar.raise_()
        self.listView.raise_()
        self.botonAtras.raise_()
        self.label.raise_()
        horasUrgencias.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(horasUrgencias)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 574, 21))
        self.menubar.setObjectName("menubar")
        horasUrgencias.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(horasUrgencias)
        self.statusbar.setObjectName("statusbar")
        horasUrgencias.setStatusBar(self.statusbar)
        self.modelo = QtGui.QStandardItemModel()
        self.listView.setModel(self.modelo)

        self.retranslateUi(horasUrgencias)
        QtCore.QMetaObject.connectSlotsByName(horasUrgencias)

    def retranslateUi(self, horasUrgencias):
        _translate = QtCore.QCoreApplication.translate
        horasUrgencias.setWindowTitle(_translate("horasUrgencias", "MainWindow"))
        self.botonAtras.setText(_translate("horasUrgencias", "Atras"))
        self.label.setText(_translate("horasUrgencias", "<html><head/><body><p><span style=\" font-size:14pt;\">Busqueda </span></p><p><span style=\" font-size:14pt;\">por nombre en </span></p><p><span style=\" font-size:14pt;\">registros de </span></p><p><span style=\" font-size:14pt;\">urgencia</span></p></body></html>"))
        self.botonBuscar.setText(_translate("horasUrgencias", "Buscar"))

    def buscar_datos(self):
        nombre = self.lineNombre.text()

        try:
            datos_encontrados = self.buscar_por_fecha('Urgencias.csv', nombre)

            self.modelo.clear()

            if datos_encontrados:
                for fila in datos_encontrados:
                    nombre = fila[0]
                    dueno = fila[1]
                    gravedad = fila[2]
                    contacto = fila[3]
                    direccion = fila[4]
                    
                    datos_completos = f"Registro paciente {nombre} Gravedad: {gravedad}, Due√±o: {dueno}, Contacto: {contacto}, Direccion: {direccion}"
                    item = QtGui.QStandardItem(datos_completos)
                    self.modelo.appendRow(item)
            else:
                item = QtGui.QStandardItem("No se encontro la mascota.")
                self.modelo.appendRow(item)
        except FileNotFoundError:
            item = QtGui.QStandardItem("El archivo CSV no fue encontrado.")
            self.modelo.appendRow(item)

    def buscar_por_fecha(self, archivo_csv, nombre):
        datos_encontrados = []
        with open(archivo_csv, 'r') as archivo:
            lector_csv = csv.reader(archivo)
            next(lector_csv)  # Ignorar la primera fila (encabezados)
            for fila in lector_csv:
                nombre_actual = fila[0]
                if nombre_actual == nombre:
                    datos_encontrados.append(fila)
        return datos_encontrados